Самый первый первый опыт написания программы приключился у меня классе в шестом. Учитывая, что мать моя программист, а у меня была большая тяга к математике и большое желание делать компьютерные игры, это рано или поздно должно было случится. Мама вызвалась понемногу учить меня.

Первую программу я помню хорошо: она считывала 1 символ с клавиатуры, а затем выводила в консоль его же. Всё. Вторая программа на долгое время стала последней; В ней было условное ветвление, и я написал “If” с большой буквы, не зная, что регистр имеет какое-то значение в языке C++. Ошибку эту маму искала долго, сказала что «я и представить не могла, что ты напишешь его с большой буквы», а после этого энтузиазма у нас обоих не было никакого.
Герои Меча и Магии

На самом деле этот пост — о Герояих Меча и Магии!
image

На третьих Героев меня подсадил мой друг Владик, когда оба мы были первоклассниками. Началось знакомство с игры «Хроники Героев: Повелители Стихий», затем уже у нас появились всякие там «Хроники Эрафии», в которых, помимо прочего, был редактор карт.

Я провёл в редакторе карт Героев 3 множество счастливых часов, и к седьмому классу знал абсолютно всё о том, что можно и чего нельзя сделать с его помощью. Кроме всего прочего, была возможность создавать на карте так называемые «события» — невидимые во время игры маркеры, проходя через которые игрок активировал... да, события. Можно было определить его не только для маркера, но и для вполне видимого сундука — шкатулки Пандоры. Доступных эффектов при этом было совсем немного: можно было что-нибудь написать игроку, после этого заставить его с кем-то сразиться, а потом что-нибудь ещё с ним сделать, но только что-нибудь одно. Ну вот например маны немного отнять, чтобы жизнь мёдом не казалась:
image

А потом я и другой мой друг, Кирилл, стали поигрывать в Героев 4. Вернее Кирилл — в героев 4, а я — в редактор карт к ним. Уж не знаю, как можно было наслаждаться игрой, в которой сравняли с землёй весь сюжет третьей части, довольно спорно передали саму игровую составляющую и прибавили к этому очень скучно сделанные карты, но вот редактор был потрясающий.
image

Помимо того, что теперь можно было поставить каждое отдельное деревце на предназначенное ему место, и в целом для наведения красоты стало гораздо больше возможностей (которыми, кажется, решили не пользоваться создатели сюжетных карт), огромные изменения претерпели события. Во-первых, теперь можно было привязать событие не только к невидимому маркеру или видимому сундуку, но буквально к чему угодно на карте. Во-вторых, теперь третья вкладка их настроек носила гордое название «Скрипт», и позволяла именно что писать скрипт, содержащий произвольное число действий и в произвольном порядке.
image

Ну то есть как «писать»... составление скрипта выполнялось путём заполнения выпадающих диалоговых окон. Выбор действий, из которых можно было составить скрипт, стал очень большим, но я не буду говорит сейчас о каких-то влияющих на игровой процесс действиях, вроде «дать герою артефакт», а остановлюсь вместо этого на управляющих конструкциях.

Во-первых, конечно, «Последовательность». Если вы хотите несколько упорядоченных действий вместо одного — вы используете последовательность, наполняя её действиями по одному (путём, опять таки, выбора вариантов в новом диалоговом окне). Можно написать игроку несколько сообщений, можно заставить драться несколько раз, можно было применить к нему несколько разных эффектов, можно было делать это в любой последовательности, можно вообще всё!

А ещё можно задать игроку вопрос, и в зависимости от ответа (только «Да» или «Нет») совершать различные действия (заполнив диалоговые окна отдельно для каждого варианта). После боя игрока с заданной армией можно было настроить продолжение скрипта как для случая победы игрока, так и для случая его поражения. Ну и конечно просто условие можно было создать, например проверить больше же ли у игрока золота, чем 100, и действовать в зависимости от этого.

Но это тоже не главное. Было действие «Задать числовую переменную», и была доступная для всяких сравнений и арифметических операций «Числовая переменная». То есть можно было создать некую сущность с именем и значением и оперировать ею.
image

Вау. Переменная, настоящая переменная! Концепцию именованного ящичка со значением внутри я постиг именно отсюда.

А что там у нас на информатике? «Кукарача» и «логомиры». Пишем «алгоритмы», зеваем от скуки, ни о каких переменных не говорим. Зато мы ещё рисуем блок-схемы, на блок-схемах у нас помимо условной операции ветвления есть циклы...
image

Что там с циклами в скриптах Героев 4? А их нет. Досадно конечно, хотелось бы иметь. Но всё равно сделать можно очень и очень много интересного, чем мы с Кириллом и были заняты. И тут выясняется, что если открыть штук 30 вложенных диалоговых окон, то можно полюбоваться на вот это сообщение:
image

А после этого редактор стыдливо закрывается.

Решение есть! «Триггерные события» — их можно вызывать из других событий, обратившись по имени. Не хватило вложенности в твоём событии? Вынеси часть в триггер. Ну вы понимаете, да? Функции.

Триггерные события решают ещё одну проблему. Циклов-то у нас может и нет, зато можно в триггере A вызвать триггер B, а в триггере B вызвать триггер A (организовать рекурсию, которая и заменит цикл). Остаётся в один из триггеров условие добавить, чтобы иногда из этого цикла всё-таки выйти. Но это я уже сейчас умничаю, восьмиклассник Витя понятия не имел что такое рекурсия и что ею можно заменить цикл.
А можно просто «Паша»?

Потом случилось очень значимое событие: начался девятый класс. Это вообще очень светлое время, и тогда у нас всё прилично было с обучением: хорошая школа, профильный класс. Раз в неделю мы ходили на занятия в ТУСУР, где нас углубленно учили математике и физике и как повезёт учили программированию. Мне повезло.

Пятикурсник (то есть очень взрослый по тем временам человек) Павел Александрович учил нас программированию на паскале. Первое занятие началось с вопроса «с чего бы началь?», на что я предложил «может с программы, которая читает символ и выводит его обратно?» (ну, это же вроде азы, да?). Последовал ответ:

-Нет, давайте лучше считать сумму двух чисел.

Ого. Вот сразу. Но я уже знал, что сейчас будет происходить: мы считаем два значения в переменные, а потом положим их сумму в третью и выведем её. Казалось, у меня было огромное преимущество из-за того, что я уже знал эту простую концепцию. Герои 4 очень помогли.

Я быстро справлялся с основными заданиями, поэтому Павел Александрович давал мне дополнительные. Я быстро справлялся и с ними, и однажды он сказал «делай что хочешь». Остальные и так делали что хотели: Павел Александрович не был требовательным, все кроме меня называли его просто Паша и занимались в основном своими делами. Но хоть он и не был очень требователен, ему было что рассказать нам.

В это время, кстати, уже вышли Герои 5.
image

Там редактор был ещё красочнее, но вот скрипты создавались уже не так просто: нужно было вручную писать их на LUA. Я даже хотел изучить LUA и распечатал себе уроки для начинающих, но Паша меня отговорил от этой затеи, за что ему, вообще-то, спасибо. С LUA я второй раз познакомился уже сильно позже, но это отдельная история.

Занимаясь своим «делай что хочешь» я написал программу, которая не делает ничего полезного, а просто выводит нарисованного ASCII-артом суслика на экран. Пара одноклассниц разглядывали суслика, когда подошёл Паша и сказал:

-Это не понтово. Пусть шевелит лапками.

Тут же он научил меня как обрабатывать нажатие клавиши клавиатуры, и теперь суслик менял положение лапок, когда пользователь нажимал любую клавишу. Если клавишей был Esc, программа завершалась.

-Вот теперь понтово \m/

Я ещё пару дней баловался с анимациями в ASCII, после чего Паша нагрянул снова:

-Это не понтово. Давай научу тебя графике.

И он научил меня пользоваться модулем graph, позволяющим рисовать 16 цветами в окошке 640х480 (это вам не unity, ребятки). И я начал баловаться с графикой.

Переломный момент случился перед самым Новым годом, когда занятия первого полугодия кончились, и я программировал в своё удовольствие дома.

Я вдруг осознал. Я знаю, как запустить бесконечный цикл для обработки клавиш. Я знаю условное ветвление. Я знаю графику...
Я могу написать игру

За 4 часа я написал первую в своей жизни игру. Маленький смайлик бегал по лабиринту, повинуясь нажатию клавиш. Касаясь стен, он терял одну жизнь, собрав весь корм в лабиринте — одерживал победу. Моей радости не было предела, и в моей жизни это остаётся самым ярким моментом. Я хотел делать игры с 6 лет, и вот я сделал одну.
image

Код там был ужасный, конечно. Я знал Триггерные события в Героях 4, но ни о каких процедурах и функциях в Pascal я ещё понятия не имел. Игра была написана очень примитивно, и всё же это было лучшее что я создал в Pascal.

Что же я услышал, когда наконец дождался начала новых занятий и показал игру Павлу Александровичу?

-Это не понтово...

Так, интересно, а это-то почему?

-...давай покажу как добавить противника.

Я понятия не имел, как (иначе я бы это уже сделал). Он показал мне чью-ту игру Bomberman, где действия на экране происходили не только тогда, когда кто-то клацал по клавишам. Секрет заключался в блоке кода

Repeat

...

Until keypressed();

Если по-простому: «выполнять цикл, пока не нажата какая-нибудь клавиша». А если и нажата, то всё равно разок выполнить (благодаря чему противники не замирают на месте, когда движется игрок, делая по одному шагу на каждый его).

Это конечно очень примитивно, но теперь в игре был противник (на скриншоте выше уже версия с ним, другой не сохранилось).
Свои инструменты

А в десятом классе программирование вела Анна Николаевна. У неё, в отличие от Паши, с самого начала был какой-то план, и она учила нас действительно клёвым вещам. Хорошо помню, как мы с Вовой освоили связные списки и чувствовали себя невероятно крутыми: мы ж создаём сущности где-то в памяти, сами не представляем где именно они там живут, но всё равно оперируем ими! Тогда это казалось каким-то rocket science, вершиной программирования.

Я через какое-то время научился хранить указатели на изображения, и мог оперировать уже спрайтами, а не просто рисовать объекты в своих играх при помощи линий.

Тут нужно оговориться. Конечно можно было как-то читать и использовать bmp-изображения или ещё какой-нибудь готовый формат картинок, но я не только не умел этого, но и не хотел идти таким путём. Гораздо интереснее было создавать свои собственные форматы и инструменты. Глядите — вот мой собственный редактор изображений размера 45х45 пикселей:
image

Можно было загружать и сохранять файлы, редактировать их, была заливка областей. Был инструмент, которого мне всегда не хватало в пейнте: заменить все вхождения цвета A цветом B. И даже семнадцатый прозрачный цвет есть, вот он, чёрный с красной точечкой на скриншоте.

На самом деле это тоже наследие Героев. Там был редактор карт, чтобы создавать для игры наполнение, и эту концепцию я тоже усвоил: помимо самой игры удобно иметь свои инструменты для её наполнения.

Ещё интереснее было с выводом кириллических надписей. На одних машинах кириллические символы почему-то были, на других почему-то не было. С этим тоже наверняка можно было разобраться как-то по-человечески, как все, но ведь можно было и по-другому.

Мой отец не программист, он занимается железом, но для своих нужд программирует на ассемблере. Он пишет надёжные программы с симпатичными олдскульными графическими интерфейсами, в код которых мне страшно заглядывать. Он решил проблему с кириллицей задолго до меня. У него была программа, чтобы рисовать отдельные символы собственного шрифта, а результатом её работы был массив констант, задающий положение каждого пикселя каждого символа алфавита. Этим массивом он со мной и поделился, мне оставалось только написать свою обёртку, чтобы это дело выводить у себя.

И так, у меня в приложении была кириллица, и это не зависело от того, в каком окружении я его запускаю.

Это всё конечно совсем уж не оптимальные способы создания своей игры. Я совсем не использовал готовые решения, но мне нравилось, что каждый пиксель в моей игре поставлен на своё место мною. Это было важно для меня.

Откровенно говоря, за остаток школы ничему новому в плане программирования я не научился. В одиннадцатом классе к нам вернулся Паша, но теперь он играл на своих занятиях в доту, а мы — в CS 1.6. Разок уговорили его порубать вместе с нами.

Я пробовал делать всякие игры, но как правило слишком лихо замахивался, а в итоге упирался во что-нибудь и забрасывал дело. Уже после школы, летом, я создал эту прелесть под дурацким названием VS3.EXE:
image

Очень круто удивлять друзей далёких от программирования. Первая версия, то есть VS1.EXE, была сделана минут за 20-30 прямо при Кирилле, в ней два прямоугольника кидались друг в друга прямоугольниками поменьше. Всего было 6 разных действий, заклинаний, одни из них наносили какой-то урон, другие позволяли подлечиться самому.

К третьей версии я уже использовал текстуры, которые рисовал в упомянутом выше редакторе. Все персонажи были анимированы, но суть игры не изменилась: они стояли напротив друг друга и по очереди обменивались заклинаниями.

Комментатор (лог действий) в низу экрана был идеей Кира, Голема со скриншота, кстати, тоже нарисовал в редакторе он. Очень нравилось, что я могу оживлять свои и чужие идеи.

Ну а потом ВУЗ начался, и это уже совсем другая история о совсем другом программировании. Давайте лучше я подведу небольшой итог.
Небольшой итог

Самое главное в обучении программировании — наличие мотивации. Почему всякие «логомиры» и «кукарачи» такие скучные и бесполезные, а редактор к Героям 4 сумел дать мне так много? Мне кажется потому, что редактор для Героев 4 не был создан для того, чтобы учить чему-то. Он был создан, чтобы решать настоящую задачу, редактор — это инструмент, им действительно пользуются люди для совершения какой-то полезной работы (если вы принимаете, что создавать контент для игры — полезно, а двигать буквы по полю управляемым тараканом — нет).

Настоящий инструмент интересно осваивать. Интересно создавать свои инструменты. Да, без всего этого можно было и обойтись, но это был неплохой путь в программирование, мне нравится, как всё вышло.

Мораль: хотите, чтобы дети стали программистами — уберите рисующую линии черепашку и дайте им Героев 4.